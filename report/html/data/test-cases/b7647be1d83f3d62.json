{
  "uid" : "b7647be1d83f3d62",
  "name" : "test_delete_service_vmware",
  "fullName" : "testcase.test_18_delete_service.TestDeleteService#test_delete_service_vmware",
  "historyId" : "8182570f0064c467c8294160f546731d",
  "time" : {
    "start" : 1572753595677,
    "stop" : 1572753602407,
    "duration" : 6730
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert True is False",
  "statusTrace" : "self = <test_18_delete_service.TestDeleteService object at 0x00D9EE70>\n\n    @allure.story(\"删除VMware服务\")\n    @pytest.mark.flaky(reruns=3)\n    def test_delete_service_vmware(self):\n        p_data = datainfo.get_xls_to_dict(\"res_node_data.xlsx\", \"vmwareapi\")[0]\n        self.arn.delete_service(p_data[\"regionname\"], p_data[\"nodename\"], p_data[\"servicename\"])\n        #校验\n        self.srmpg.open_sys_regionMgr_page()\n        # time.sleep(1)\n        # self.srmpg.click_region_tree(p_data[\"regionname\"])\n        # self.srmpg.click_tree_res_node(p_data[\"nodename\"])\n        # self.srmpg.click_tree_res_node_i(p_data[\"nodename\"])\n    \n        flag = self.dr.element_exist(\"xpath->(//a[contains(text(),'%s')])\"%p_data[\"servicename\"])\n>       assert flag is False\nE       assert True is False\n\ntestcase\\test_18_delete_service.py:51: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_Class__pytest_setup_class",
    "time" : {
      "start" : 1572753582274,
      "stop" : 1572753595676,
      "duration" : 13402
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "登录系统",
      "time" : {
        "start" : 1572753591844,
        "stop" : 1572753591848,
        "duration" : 4
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "a3af60883e5cf990",
        "name" : "705ba05f-4064-438c-88df-e29216fc3c3e-attachment.attach",
        "source" : "a3af60883e5cf990.attach",
        "type" : "text/plain",
        "size" : 27
      }, {
        "uid" : "8708646d9425411b",
        "name" : "2bef918b-13b6-4c02-86bf-2d4816bd4857-attachment.attach",
        "source" : "8708646d9425411b.attach",
        "type" : "text/plain",
        "size" : 15
      }, {
        "uid" : "330325db756341f0",
        "name" : "d63d681d-101b-4b22-b5d4-8fc9bba302a1-attachment.attach",
        "source" : "330325db756341f0.attach",
        "type" : "text/plain",
        "size" : 14
      } ],
      "parameters" : [ ],
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 3,
      "hasContent" : true,
      "stepsCount" : 0
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 3,
    "hasContent" : true,
    "stepsCount" : 1
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert True is False",
    "statusTrace" : "self = <test_18_delete_service.TestDeleteService object at 0x00D9EE70>\n\n    @allure.story(\"删除VMware服务\")\n    @pytest.mark.flaky(reruns=3)\n    def test_delete_service_vmware(self):\n        p_data = datainfo.get_xls_to_dict(\"res_node_data.xlsx\", \"vmwareapi\")[0]\n        self.arn.delete_service(p_data[\"regionname\"], p_data[\"nodename\"], p_data[\"servicename\"])\n        #校验\n        self.srmpg.open_sys_regionMgr_page()\n        # time.sleep(1)\n        # self.srmpg.click_region_tree(p_data[\"regionname\"])\n        # self.srmpg.click_tree_res_node(p_data[\"nodename\"])\n        # self.srmpg.click_tree_res_node_i(p_data[\"nodename\"])\n    \n        flag = self.dr.element_exist(\"xpath->(//a[contains(text(),'%s')])\"%p_data[\"servicename\"])\n>       assert flag is False\nE       assert True is False\n\ntestcase\\test_18_delete_service.py:51: AssertionError",
    "steps" : [ {
      "name" : "删除资源节点服务服务",
      "time" : {
        "start" : 1572753595688,
        "stop" : 1572753595691,
        "duration" : 3
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "d3cd0bcf9bbb92ee",
        "name" : "baa1ac03-ece9-4fdd-b42d-905d38798f67-attachment.attach",
        "source" : "d3cd0bcf9bbb92ee.attach",
        "type" : "text/plain",
        "size" : 12
      }, {
        "uid" : "b4fa920bf15ec258",
        "name" : "ccff2bfa-d793-4c0f-8da7-74156548bab1-attachment.attach",
        "source" : "b4fa920bf15ec258.attach",
        "type" : "text/plain",
        "size" : 37
      }, {
        "uid" : "6f7ae67c3b77894",
        "name" : "7eff1494-f174-4624-99a6-e99d063d5649-attachment.attach",
        "source" : "6f7ae67c3b77894.attach",
        "type" : "text/plain",
        "size" : 23
      } ],
      "parameters" : [ ],
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 3,
      "hasContent" : true,
      "stepsCount" : 0
    } ],
    "attachments" : [ {
      "uid" : "92df9457372daebf",
      "name" : "log",
      "source" : "92df9457372daebf.txt",
      "type" : "text/plain",
      "size" : 23101
    } ],
    "parameters" : [ ],
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 4,
    "hasContent" : true,
    "stepsCount" : 1
  },
  "afterStages" : [ {
    "name" : "_Class__pytest_setup_class::0",
    "time" : {
      "start" : 1572753619539,
      "stop" : 1572753620885,
      "duration" : 1346
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "资源节点管理"
  }, {
    "name" : "story",
    "value" : "删除VMware服务"
  }, {
    "name" : "parentSuite",
    "value" : "testcase"
  }, {
    "name" : "suite",
    "value" : "test_18_delete_service"
  }, {
    "name" : "subSuite",
    "value" : "TestDeleteService"
  }, {
    "name" : "host",
    "value" : "wuzs"
  }, {
    "name" : "thread",
    "value" : "23720-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testcase.test_18_delete_service"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "b7647be1d83f3d62.json",
  "parameterValues" : [ ]
}