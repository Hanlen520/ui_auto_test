{"name": "test_create_vpool", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: Element <button class=\"btn btn-link ng-binding ng-scope ng-isolate-scope\"> is not clickable at point (1710,241) because another element <div class=\"modal-scrollable\"> obscures it", "trace": "self = <test_11_ceate_crate_vpool.TestCreateVpool object at 0x009F80F0>\n\n    @allure.story(\"创建VPOOL\")\n    @pytest.mark.flaky(reruns=3)\n    def test_create_vpool(self):\n        vdc_a = vdcAction.VdcACction(self.dr)\n        vdc_pg = vdcPage.VdcPage(self.dr)\n        login = Login(self.dr)\n        datas = datainfo.get_xls_to_dict(\"user.xlsx\", \"Sheet1\")[0]\n        p_data = datainfo.get_xls_to_dict(\"vdc_vpool.xlsx\",\"Sheet1\")[0]\n        login.login(datas[\"username\"], datas[\"password\"])\n        vdc_a.create_vpool(p_data[\"vdcname\"],p_data[\"vpoolname\"],\"虚拟资源\",\"数据中心\",\n                           \"DC1\",p_data[\"vpooldesc\"])\n    \n        vdc_pg.open_vdc_page()\n        time.sleep(1)\n        vdc_pg.search_vdc(p_data[\"vdcname\"])\n>       vdc_pg.click_az_buttun()\n\ntestcase\\test_11_ceate_crate_vpool.py:38: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npublic\\pages\\vdcPage.py:31: in click_az_buttun\n    self.dr.click(\"css->.btn-link:nth-child(1)\")\npublic\\common\\pyselenium.py:220: in click\n    el.click()\nD:\\Env\\ui_auto\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:80: in click\n    self._execute(Command.CLICK_ELEMENT)\nD:\\Env\\ui_auto\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:633: in _execute\n    return self._parent.execute(command, params)\nD:\\Env\\ui_auto\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:321: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x005ED630>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"Element <button class=\\\\\"btn btn-li...te@chrome://marionette/content/listener.js:450:7\\\\nclickElement@chrome://marionette/content/listener.js:1318:18\\\\n\"}}'}\n\n    def check_response(self, response):\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if status is None or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, basestring):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if status is None:\n                        status = value[\"status\"]\n                        message = value[\"value\"]\n                        if not isinstance(message, basestring):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class = ErrorInResponseException\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if value == '' or value is None:\n            value = response['value']\n        if isinstance(value, basestring):\n            if exception_class == ErrorInResponseException:\n                raise exception_class(response, value)\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        if 'stackTrace' in value and value['stackTrace']:\n            stacktrace = []\n            try:\n                for frame in value['stackTrace']:\n                    line = self._value_or_default(frame, 'lineNumber', '')\n                    file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                    if line:\n                        file = \"%s:%s\" % (file, line)\n                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                    if 'className' in frame:\n                        meth = \"%s.%s\" % (frame['className'], meth)\n                    msg = \"    at %s (%s)\"\n                    msg = msg % (meth, file)\n                    stacktrace.append(msg)\n            except TypeError:\n                pass\n        if exception_class == ErrorInResponseException:\n            raise exception_class(response, message)\n        elif exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: Element <button class=\"btn btn-link ng-binding ng-scope ng-isolate-scope\"> is not clickable at point (1710,241) because another element <div class=\"modal-scrollable\"> obscures it\n\nD:\\Env\\ui_auto\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:242: ElementClickInterceptedException"}, "steps": [{"name": "登录系统", "status": "passed", "attachments": [{"source": "d5c58e41-9c2a-4c8a-a7e5-a6187cee3456-attachment.attach"}, {"source": "dd2d627e-2dc9-4fcc-a955-294300e06d57-attachment.attach"}, {"source": "5b74ee1b-7b26-4d1e-a22b-a0f6afde8d69-attachment.attach"}], "start": 1572770499735, "stop": 1572770499738}, {"name": "创建vpool", "status": "passed", "attachments": [{"source": "b99452a6-00e4-4579-ae87-cdb7636abd11-attachment.attach"}, {"source": "3c129c5c-e38c-48b1-83b8-bdb1e18f4839-attachment.attach"}, {"source": "842dcc39-ddc0-47c0-bc15-f1537f43b618-attachment.attach"}, {"source": "8b2e7bb6-ff9c-4dcf-8854-454032cf4228-attachment.attach"}, {"source": "4f23b12c-d27d-41ec-a9c8-d3cf74811476-attachment.attach"}], "start": 1572770503268, "stop": 1572770503272}], "attachments": [{"name": "log", "source": "d0e52286-3655-4ad3-b39a-345aefceae0b-attachment.txt", "type": "text/plain"}], "start": 1572770499725, "stop": 1572770513133, "uuid": "eb2b5489-a14c-4451-a768-3abbd1eed6ca", "historyId": "cf96f0fa38cf85928985b0aacdd2379e", "testCaseId": "fa657ae1d7f462e793cf746d83b18a5d", "fullName": "testcase.test_11_ceate_crate_vpool.TestCreateVpool#test_create_vpool", "labels": [{"name": "feature", "value": "VPOOL管理"}, {"name": "story", "value": "创建VPOOL"}, {"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_11_ceate_crate_vpool"}, {"name": "subSuite", "value": "TestCreateVpool"}, {"name": "host", "value": "wuzs"}, {"name": "thread", "value": "9220-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_11_ceate_crate_vpool"}]}